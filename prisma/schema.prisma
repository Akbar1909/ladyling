// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id  Int @id @default(autoincrement())
  username String?
  password String
  email String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  attempts Attempt[]
}

model Test{
  id Int @id @default(autoincrement())
  name String
  description String?
  startDate Int?
  endDate   Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  status  TestStatus @default(upcoming)
  questions Question[]
  attempts Attempt[]
}

model Question{
  id Int @id @default(autoincrement())
  testId Int
  text String
  imageUrl String?
  options Option[]
  test Test @relation(fields: [testId],references: [id])
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt
  responses Response[]
}

model Option{
  id Int @id @default(autoincrement())
  questionId Int
  text String
  label String
  isCorrect Boolean
  question Question @relation(fields: [questionId],references: [id])
  @@unique([questionId,id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  responsesSelected Response[] @relation(name: "selectedOption")
  responsesCorrect  Response[] @relation(name: "correctOption")
}


model Attempt{
  id Int @id @default(autoincrement())
  userId Int?
  testId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User? @relation(fields: [userId],references: [id])
  test Test @relation(fields: [testId],references: [id])
  responses Response[]
}

model Response{
  id Int @id @default(autoincrement())
  attempId Int
  questionId Int
  selectedId Int
  correctId Int
  isCorrect Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  attempt Attempt @relation(fields: [attempId],references: [id])
  question Question @relation(fields: [questionId],references: [id])
  selected Option @relation(name: "selectedOption",fields: [selectedId],references: [id])
  correct Option @relation(name: "correctOption",fields: [correctId],references: [id])
  @@unique([attempId,questionId])
}



model AssetLibrary{
  mediaId Int @id @default(autoincrement())
  filename String
  originalName String
  mimetype String
  size Int
  filePath String
  viewUrl String? @default("")
  aspectRatio Float? @default(1)
  updatedAt Int
  createdAt Int
}

enum TestStatus{
  active
  upcoming
  closed
}






